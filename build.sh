#!/bin/bash
cd "$(dirname ${BASH_SOURCE[0]})"
pwd=$PWD

action=$1
if [ -z "$action" ]; then
    printf "usage: ./build.sh release|reset\n\n"
    printf "%-15s %s\n" "release" "for each plugin, gather current git hash and write to file"
    printf "%-15s %s\n" "reset"   "for each plugin, reset the hash in file to default branch, usually 'master' or 'main'"
    exit 1
fi

PLUGINS_DIR=~/.local/share/nvim/site/pack/packer
OUTPUT_FILE=$pwd/lua/plugins/versions.lua

echo "info: output will be redirected to $OUTPUT_FILE"
echo "-- This file is generated by build.sh" > $OUTPUT_FILE
echo "local V = {}" >> $OUTPUT_FILE

for subdir in $(ls "$PLUGINS_DIR"); do
	if [ -d "$PLUGINS_DIR/$subdir" ]; then
		printf "\n------ packer/$subdir ------\n\n" >> $OUTPUT_FILE
        cd $PLUGINS_DIR/$subdir
        # traverse all plugins under current subdir
        for plugin in $(ls); do
            d=$PLUGINS_DIR/$subdir/$plugin
            cd $d
            git_hash=""
            if [ "$action" == "release" ]; then
                git_hash=$(git rev-parse --short HEAD)
            elif [ "$action" == "reset" ]; then
                # get default branch of current plugin, usually 'master' or 'main'
                # git_hash=$(git remote show origin | grep "HEAD branch" | awk '{print $3}')    # requires network access
                git_hash=$(git branch --contains | grep -v -e "HEAD" | sed -e 's/\*//' | xargs)
            fi

            # plugin name: replace special characters
            plugin=${plugin//-/_}
            plugin=${plugin//./_}
            
            printf "%-30s = '%s'\n" "V.${plugin//-/_}" "$git_hash" >> $OUTPUT_FILE
        done
	fi
done

printf "\nreturn V\n" >> $OUTPUT_FILE
